CREATE TABLE IF NOT EXISTS ajxp_user_rights (
  login text NOT NULL,
  repo_uuid text NOT NULL,
  rights text NOT NULL,
  PRIMARY KEY(login, repo_uuid)
);

CREATE TABLE IF NOT EXISTS ajxp_user_prefs (
  login text NOT NULL,
  "name" text NOT NULL,
  val blob,
  PRIMARY KEY(login, name)
);

CREATE TABLE IF NOT EXISTS ajxp_user_bookmarks (
  login text NOT NULL,
  repo_uuid text NOT NULL,
  path text,
  title text NOT NULL,
  PRIMARY KEY(login, repo_uuid, title)
);

CREATE TABLE IF NOT EXISTS ajxp_repo (
  uuid text PRIMARY KEY,
  parent_uuid text DEFAULT NULL,
  owner_user_id text DEFAULT NULL,
  child_user_id text DEFAULT NULL,
  path text,
  display text,
  accessType text,
  recycle text,
  bcreate integer,
  writeable integer,
  enabled integer,
  isTemplate integer,
  inferOptionsFromParent integer,
  slug text,
  groupPath text
);
 
CREATE TABLE IF NOT EXISTS ajxp_repo_options (
  uuid text NOT NULL,
  "name" text NOT NULL,
  val blob
  PRIMARY KEY (uuid, name)
);

CREATE TABLE IF NOT EXISTS ajxp_roles (
  role_id text PRIMARY KEY,
  serial_role blob NOT NULL,
  searchable_repositories text
);

CREATE TABLE IF NOT EXISTS ajxp_groups (
  groupPath text PRIMARY KEY,
  groupLabel text NOT NULL
);

CREATE TABLE IF NOT EXISTS ajxp_plugin_configs (
  id text PRIMARY KEY,
  configs longblob NOT NULL
);

CREATE TABLE IF NOT EXISTS ajxp_simple_store (
  object_id text NOT NULL,
  store_id text NOT NULL,
  serialized_data longtext,
  binary_data blob,
  related_object_id text,
  insertion_date DATETIME DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(object_id, store_id)
);

CREATE TABLE IF NOT EXISTS ajxp_user_teams (
  team_id text NOT NULL,
  user_id text NOT NULL,
  team_label text NOT NULL,
  owner_id text NOT NULL,
  PRIMARY KEY(team_id, user_id)
);